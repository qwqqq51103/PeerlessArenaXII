/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PeerlessArenaXII.gui;

import PeerlessArenaXII.ArenaPlayer;
import PeerlessArenaXII.GameVar;
import PeerlessArenaXII.npcmethod.monster;
import PeerlessArenaXII.npcmethod.npc;
import java.util.logging.Logger;
import PeerlessArenaXII.GameMed.GameMethod;
import PeerlessArenaXII.ChrDiathesisVar;
import static PeerlessArenaXII.ChrDiathesisVar.AGI;
import static PeerlessArenaXII.ChrDiathesisVar.INT;
import static PeerlessArenaXII.ChrDiathesisVar.LUK;
import static PeerlessArenaXII.ChrDiathesisVar.STR;
import javax.swing.JTextArea;
import PeerlessArenaXII.GameMed.GameContent;
import static java.awt.Color.*;
import javafx.scene.paint.Color;
import PeerlessArenaXII.GameMed.ColorOutput;
import PeerlessArenaXII.MobVar;
import java.util.Set;
import static javafx.scene.paint.Color.color;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author Joe
 */
public class GameMS extends javax.swing.JFrame {

    npc npc = new npc();
    ArenaPlayer ap = new ArenaPlayer();
    monster mob = new monster();
    GameMethod gm = new GameMethod();
    GameVar gv = new GameVar();
    ChrDiathesisVar cdv = new ChrDiathesisVar();
    GameContent gc = new GameContent();
    ColorOutput cp = new ColorOutput();
    MobVar mv = new MobVar();
    String str;
    String a;
    int STR = 0;
    int AGI = 0;
    int INT = 0;
    int LUK = 0;

    /**
     * Creates new form GameMS
     */
    public GameMS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outText = new javax.swing.JScrollPane();
        chatLog = new javax.swing.JTextPane();
        主畫面 = new javax.swing.JTabbedPane();
        人物資訊 = new javax.swing.JPanel();
        Name = new javax.swing.JLabel();
        exp = new javax.swing.JLabel();
        Level = new javax.swing.JLabel();
        稱號 = new javax.swing.JLabel();
        更新 = new javax.swing.JButton();
        開始 = new javax.swing.JButton();
        血量 = new javax.swing.JLabel();
        防禦 = new javax.swing.JLabel();
        金錢 = new javax.swing.JLabel();
        詳細資訊 = new javax.swing.JPanel();
        力量 = new javax.swing.JLabel();
        敏捷 = new javax.swing.JLabel();
        智力 = new javax.swing.JLabel();
        幸運 = new javax.swing.JLabel();
        智力增加 = new javax.swing.JButton();
        幸運增加 = new javax.swing.JButton();
        力量增加 = new javax.swing.JButton();
        敏捷增加 = new javax.swing.JButton();
        剩餘能力點 = new javax.swing.JLabel();
        力量預示 = new javax.swing.JLabel();
        敏捷預示 = new javax.swing.JLabel();
        智力預示 = new javax.swing.JLabel();
        幸運預示 = new javax.swing.JLabel();
        確定 = new javax.swing.JButton();
        取消 = new javax.swing.JButton();
        能力點預示 = new javax.swing.JLabel();
        攻擊力 = new javax.swing.JLabel();
        攻擊力預示 = new javax.swing.JLabel();
        夥伴資訊 = new javax.swing.JPanel();
        顯示夥伴 = new javax.swing.JLabel();
        選擇夥伴 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        夥伴好感度 = new javax.swing.JTextArea();
        同行奇遇 = new javax.swing.JButton();
        打怪修煉 = new javax.swing.JPanel();
        選擇怪物 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        怪物 = new javax.swing.JTextArea();
        跳過戰鬥 = new javax.swing.JCheckBox();
        復活 = new javax.swing.JButton();
        清除文字 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("你好！我是來打雜的");
        setBackground(new java.awt.Color(204, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        chatLog.setEditable(false);
        chatLog.setForeground(new java.awt.Color(51, 255, 0));
        outText.setViewportView(chatLog);

        主畫面.setBackground(new java.awt.Color(244, 244, 244));

        Name.setText("**");

        exp.setText("**");

        Level.setText("**");

        稱號.setText("**");

        更新.setText("更新(卡住請按)");
        更新.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                更新ActionPerformed(evt);
            }
        });

        開始.setText("開始");
        開始.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                開始ActionPerformed(evt);
            }
        });

        血量.setText("**");

        防禦.setText("**");

        金錢.setText("**");

        javax.swing.GroupLayout 人物資訊Layout = new javax.swing.GroupLayout(人物資訊);
        人物資訊.setLayout(人物資訊Layout);
        人物資訊Layout.setHorizontalGroup(
            人物資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(人物資訊Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(人物資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, 人物資訊Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(開始)
                        .addGap(18, 18, 18)
                        .addComponent(更新))
                    .addGroup(人物資訊Layout.createSequentialGroup()
                        .addGroup(人物資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(血量))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(人物資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Level, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(防禦))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(人物資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(人物資訊Layout.createSequentialGroup()
                                .addComponent(exp, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(稱號, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(金錢))
                        .addGap(0, 74, Short.MAX_VALUE)))
                .addContainerGap())
        );
        人物資訊Layout.setVerticalGroup(
            人物資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(人物資訊Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(人物資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Level, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(稱號, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(人物資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(血量)
                    .addComponent(防禦)
                    .addComponent(金錢))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(人物資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(更新)
                    .addComponent(開始))
                .addContainerGap())
        );

        主畫面.addTab("人物資訊", 人物資訊);

        力量.setText("**");

        敏捷.setText("**");

        智力.setText("**");

        幸運.setText("**");

        智力增加.setText("增加");
        智力增加.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                智力增加ActionPerformed(evt);
            }
        });

        幸運增加.setText("增加");
        幸運增加.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                幸運增加ActionPerformed(evt);
            }
        });

        力量增加.setText("增加");
        力量增加.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                力量增加ActionPerformed(evt);
            }
        });

        敏捷增加.setText("增加");
        敏捷增加.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                敏捷增加ActionPerformed(evt);
            }
        });

        剩餘能力點.setText("**");

        力量預示.setForeground(new java.awt.Color(255, 51, 51));
        力量預示.setText("**");

        敏捷預示.setForeground(new java.awt.Color(255, 51, 51));
        敏捷預示.setText("**");

        智力預示.setForeground(new java.awt.Color(255, 51, 51));
        智力預示.setText("**");

        幸運預示.setForeground(new java.awt.Color(255, 51, 51));
        幸運預示.setText("**");

        確定.setText("確定");
        確定.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                確定ActionPerformed(evt);
            }
        });

        取消.setText("取消");
        取消.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                取消ActionPerformed(evt);
            }
        });

        能力點預示.setForeground(new java.awt.Color(255, 51, 51));
        能力點預示.setText("**");

        攻擊力.setText("攻擊力");

        攻擊力預示.setForeground(new java.awt.Color(255, 51, 51));
        攻擊力預示.setText("**");

        javax.swing.GroupLayout 詳細資訊Layout = new javax.swing.GroupLayout(詳細資訊);
        詳細資訊.setLayout(詳細資訊Layout);
        詳細資訊Layout.setHorizontalGroup(
            詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(詳細資訊Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(詳細資訊Layout.createSequentialGroup()
                        .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(詳細資訊Layout.createSequentialGroup()
                                .addComponent(力量)
                                .addGap(1, 1, 1)
                                .addComponent(力量預示))
                            .addGroup(詳細資訊Layout.createSequentialGroup()
                                .addComponent(敏捷)
                                .addGap(1, 1, 1)
                                .addComponent(敏捷預示))
                            .addComponent(力量增加)
                            .addComponent(敏捷增加))
                        .addGap(100, 100, 100)
                        .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(幸運增加)
                            .addGroup(詳細資訊Layout.createSequentialGroup()
                                .addComponent(幸運)
                                .addGap(1, 1, 1)
                                .addComponent(幸運預示))
                            .addComponent(智力增加)
                            .addGroup(詳細資訊Layout.createSequentialGroup()
                                .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(詳細資訊Layout.createSequentialGroup()
                                        .addComponent(智力)
                                        .addGap(1, 1, 1)
                                        .addComponent(智力預示)
                                        .addGap(197, 197, 197))
                                    .addComponent(攻擊力, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(1, 1, 1)
                                .addComponent(攻擊力預示)
                                .addGap(125, 125, 125))))
                    .addGroup(詳細資訊Layout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(詳細資訊Layout.createSequentialGroup()
                                .addComponent(剩餘能力點)
                                .addGap(1, 1, 1)
                                .addComponent(能力點預示))
                            .addGroup(詳細資訊Layout.createSequentialGroup()
                                .addComponent(確定)
                                .addGap(60, 60, 60)
                                .addComponent(取消)))
                        .addContainerGap(14, Short.MAX_VALUE))))
        );
        詳細資訊Layout.setVerticalGroup(
            詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(詳細資訊Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(力量)
                    .addComponent(智力)
                    .addComponent(力量預示)
                    .addComponent(智力預示)
                    .addComponent(攻擊力)
                    .addComponent(攻擊力預示))
                .addGap(9, 9, 9)
                .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(力量增加)
                    .addComponent(智力增加))
                .addGap(15, 15, 15)
                .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(敏捷)
                    .addComponent(幸運)
                    .addComponent(幸運預示)
                    .addComponent(敏捷預示))
                .addGap(9, 9, 9)
                .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(幸運增加)
                    .addComponent(敏捷增加))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(能力點預示)
                    .addComponent(剩餘能力點))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(詳細資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(取消)
                    .addComponent(確定)))
        );

        主畫面.addTab("詳細資訊", 詳細資訊);

        顯示夥伴.setText("尚未選擇夥伴");

        選擇夥伴.setText("選擇");
        選擇夥伴.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                選擇夥伴ActionPerformed(evt);
            }
        });

        夥伴好感度.setEditable(false);
        夥伴好感度.setColumns(20);
        夥伴好感度.setRows(5);
        夥伴好感度.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                夥伴好感度AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(夥伴好感度);

        同行奇遇.setText("同行奇遇");
        同行奇遇.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                同行奇遇ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout 夥伴資訊Layout = new javax.swing.GroupLayout(夥伴資訊);
        夥伴資訊.setLayout(夥伴資訊Layout);
        夥伴資訊Layout.setHorizontalGroup(
            夥伴資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(夥伴資訊Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(夥伴資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(夥伴資訊Layout.createSequentialGroup()
                        .addComponent(顯示夥伴, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(選擇夥伴))
                    .addComponent(同行奇遇))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        夥伴資訊Layout.setVerticalGroup(
            夥伴資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(夥伴資訊Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(夥伴資訊Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(顯示夥伴, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(選擇夥伴))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(同行奇遇)
                .addGap(31, 31, 31))
            .addGroup(夥伴資訊Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
        );

        主畫面.addTab("夥伴資訊", 夥伴資訊);

        選擇怪物.setText("選擇怪物");
        選擇怪物.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                選擇怪物ActionPerformed(evt);
            }
        });

        怪物.setColumns(20);
        怪物.setRows(5);
        怪物.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                怪物AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(怪物);

        跳過戰鬥.setText("跳過戰鬥");
        跳過戰鬥.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                跳過戰鬥MouseClicked(evt);
            }
        });
        跳過戰鬥.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                跳過戰鬥ActionPerformed(evt);
            }
        });

        復活.setText("小二救命");
        復活.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                復活ActionPerformed(evt);
            }
        });

        清除文字.setText("清除文字");
        清除文字.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                清除文字ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout 打怪修煉Layout = new javax.swing.GroupLayout(打怪修煉);
        打怪修煉.setLayout(打怪修煉Layout);
        打怪修煉Layout.setHorizontalGroup(
            打怪修煉Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, 打怪修煉Layout.createSequentialGroup()
                .addGroup(打怪修煉Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(打怪修煉Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(跳過戰鬥))
                    .addGroup(打怪修煉Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(打怪修煉Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(復活)
                    .addComponent(選擇怪物)
                    .addComponent(清除文字))
                .addGap(25, 25, 25))
        );
        打怪修煉Layout.setVerticalGroup(
            打怪修煉Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, 打怪修煉Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(打怪修煉Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addGroup(打怪修煉Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(清除文字)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(復活)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(打怪修煉Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(選擇怪物)
                    .addComponent(跳過戰鬥))
                .addContainerGap())
        );

        主畫面.addTab("打怪打怪囉", 打怪修煉);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(主畫面)
                    .addComponent(outText))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(主畫面)
                .addGap(18, 18, 18)
                .addComponent(outText, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void 選擇夥伴ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_選擇夥伴ActionPerformed

        if (gv.isOneChoose) {
            npc.setChoosePartner();
            CdvUpdata();
            npc.setLoves();
            顯示夥伴.setText("目前夥伴 : " + GameVar.NpcName[GameVar.choose - 1]);
        } else {
            a = "夥伴資訊：不可更換夥伴！";
            printfChatLog(a, 1);
        }
        LoveUpdate();
    }//GEN-LAST:event_選擇夥伴ActionPerformed

    private void 更新ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_更新ActionPerformed
        // TODO add your handling code her
        Updata();
        LoveUpdate();
    }//GEN-LAST:event_更新ActionPerformed

    private void 開始ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_開始ActionPerformed
        // TODO add your handling code here:
        if (ap.i == true) {
            a = "人物資訊：已有名字！！";
            printfChatLog(a, 1);
        } else {
            ap.setName();
        }
        Name.setText("姓名 : " + GameVar.PlayerName);
        Updata();
        CdvUpdata();
    }//GEN-LAST:event_開始ActionPerformed

    private void 選擇怪物ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_選擇怪物ActionPerformed
        if (ap.i == true && gv.isOneChoose == false && gv.isDie == false) {
            try {
                // TODO add your handling code here:
                gm.AtkMonster();
                CdvUpdata();
            } catch (InterruptedException ex) {
                Logger.getLogger(GameMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        } else {
            chatLog.setText("請確認是否有創建角色與夥伴！");
            return;
        }
        Updata();
        //ap.RonDamg(gv.mobLV[gc.mobnums - 1], gv.mobHP[gc.mobnums - 1], gv.mobSTRMAX[gc.mobnums - 1], gv.mobSTRMIN[gc.mobnums - 1], gv.mobDEF[gc.mobnums - 1]);
    }//GEN-LAST:event_選擇怪物ActionPerformed

    private void 夥伴好感度AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_夥伴好感度AncestorAdded
        // TODO add your handling code here:
        StringBuilder value = new StringBuilder();
        for (int i = 0; i < GameVar.NpcLoves.length; i++) {
            value.append("\n " + GameVar.NpcName[i] + "\t" + GameVar.NpcLevelName[GameVar.NpcLevel[i]] + "\t" + GameVar.NpcLoves[i]);
        }
        //夥伴好感度.setText("姓名\t稱號\t好感度" + value.toString());
        LoveUpdate();
    }//GEN-LAST:event_夥伴好感度AncestorAdded

    private void 同行奇遇ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_同行奇遇ActionPerformed
        // TODO add your handling code here:
        gm.GiveChoose();
        Updata();
    }//GEN-LAST:event_同行奇遇ActionPerformed

    private void 怪物AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_怪物AncestorAdded
        // TODO add your handling code here:
        StringBuilder value = new StringBuilder();
        for (int i = 0; i < mv.mobnameXnum.length; i++) {
            value.append("\n " + mv.mobnameXnum[i] + "\t" + mv.mobLV[i] + "\t" + mv.mobHP[i] + "\t" + mv.mobSTRMIN[i] + " ~ " + mv.mobSTRMAX[i] + "\t" + mv.mobDEF[i]);
        }
        怪物.setText(" 怪物\t等級\t血量\t攻擊\t防禦" + value.toString());
        Updata();
    }//GEN-LAST:event_怪物AncestorAdded

    private void 跳過戰鬥MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_跳過戰鬥MouseClicked
        // TODO add your handling code here:
        if (跳過戰鬥.isSelected() == true) {
            gv.pass = true;
        } else {
            gv.pass = false;
        }
    }//GEN-LAST:event_跳過戰鬥MouseClicked

    private void 跳過戰鬥ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_跳過戰鬥ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_跳過戰鬥ActionPerformed

    private void 復活ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_復活ActionPerformed
        // TODO add your handling code here:
        gv.money -= 1;
        cdv.HPMIN = cdv.HPMAX;
        gv.isDie = false;
        Updata();
        CdvUpdata();
    }//GEN-LAST:event_復活ActionPerformed

    private void 清除文字ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_清除文字ActionPerformed
        // TODO add your handling code here:
        chatLog.setText(null);
    }//GEN-LAST:event_清除文字ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        ImageIcon icon = new ImageIcon("PeerlessArenaXII/IU.jpg");
        setIconImage(icon.getImage());
    }//GEN-LAST:event_formWindowActivated

    private void 取消ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_取消ActionPerformed
        // TODO add your handling code here:
        CdvUp();
    }//GEN-LAST:event_取消ActionPerformed

    private void 確定ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_確定ActionPerformed
        // TODO add your handling code here:
        cdv.daitTotal = STR + AGI + INT + LUK;
        ap.addDiathesis(cdv.diathesis, STR, AGI, INT, LUK, true);
        CdvUp();
        CdvUpdata();
    }//GEN-LAST:event_確定ActionPerformed

    private void 敏捷增加ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_敏捷增加ActionPerformed
        // TODO add your handling code here:
        AGI++;
        Sduf(1);
    }//GEN-LAST:event_敏捷增加ActionPerformed

    private void 力量增加ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_力量增加ActionPerformed
        // TODO add your handling code here:
        STR++;
        Sduf(0);
    }//GEN-LAST:event_力量增加ActionPerformed

    private void 幸運增加ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_幸運增加ActionPerformed
        // TODO add your handling code here:
        LUK++;
        Sduf(3);
    }//GEN-LAST:event_幸運增加ActionPerformed

    private void 智力增加ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_智力增加ActionPerformed
        // TODO add your handling code here:
        INT++;
        Sduf(2);
    }//GEN-LAST:event_智力增加ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameMS().setVisible(true);
                xx();
            }
        });
    }

    //訊息廣播
    public static void printfChatLog(String str, int i) {
        switch (i) {
            case 0:
                chatLog.setText(null);
                chatLog.setForeground(java.awt.Color.GREEN);
                break;
            case 1:
                chatLog.setText(null);
                chatLog.setForeground(java.awt.Color.RED);
                break;
            case 2:
                chatLog.setText(null);
                chatLog.setForeground(java.awt.Color.BLUE);
                break;
            case 3:
                chatLog.setForeground(java.awt.Color.RED);
                break;
            case 4:
                chatLog.setForeground(java.awt.Color.BLUE);
                break;
            default:
                chatLog.setText(null);
                chatLog.setForeground(BLACK);
        }
        chatLog.setText(chatLog.getText() + str + "\r\n");
    }

    //好感度更新
    public void LoveUpdate() {
        StringBuilder value = new StringBuilder();
        for (int i = 0; i < GameVar.NpcLoves.length; i++) {
            value.append("\n " + GameVar.NpcName[i] + "\t" + GameVar.NpcLevelName[GameVar.NpcLevel[i]] + "\t" + GameVar.NpcLoves[i]);
        }
        夥伴好感度.setText("姓名\t稱號\t好感度" + value.toString());
    }

    //人物更新資訊
    public void Updata() {
        Name.setText("姓名 : " + GameVar.PlayerName);
        Level.setText("等級 : " + GameVar.ChrLevel);
        exp.setText("經驗 : " + GameVar.ChrExp);
        稱號.setText("稱號 : " + GameVar.str);
        金錢.setText("金錢 : " + GameVar.money);
    }

    //素質更新
    public void CdvUpdata() {
        力量.setText("STR : " + cdv.STR);
        敏捷.setText("AGI : " + cdv.AGI);
        智力.setText("INT : " + cdv.INT);
        幸運.setText("LUK : " + cdv.LUK);
        剩餘能力點.setText("剩餘能力點 : " + cdv.diathesis);
        血量.setText("HP : " + cdv.HPMAX + " / " + cdv.HPMIN);
        防禦.setText("DEF : " + cdv.DEF + " / " + cdv.def);
        攻擊力.setText("攻擊力 : " + cdv.STRMIN + "~" + cdv.STRMAX);
    }

    //預示更新
    void CdvUp() {
        力量預示.setText("");
        敏捷預示.setText("");
        智力預示.setText("");
        幸運預示.setText("");
        能力點預示.setText("");
        攻擊力預示.setText("");
        STR = 0;
        AGI = 0;
        INT = 0;
        LUK = 0;
    }

    //鎖定文字視窗
    static void xx() {
        夥伴好感度.setEnabled(false);
//        chatLog.setEnabled(false);
        怪物.setEnabled(false);
    }

    void Sduf(int see) {
        StringBuilder value = new StringBuilder();
        StringBuilder value1 = new StringBuilder();
        StringBuilder value2 = new StringBuilder();
        int total = STR + LUK + INT + AGI;
        int reStr = (STR + cdv.STR) + (AGI + cdv.AGI);
        switch (see) {
            case 0:
                value.append("+ " + STR);
                value1.append("- " + total);
                value2.append(" 增加後 -> " + reStr / 7 + "~" + reStr);
                力量預示.setText(value.toString());
                能力點預示.setText(value1.toString());
                攻擊力預示.setText(value2.toString());
                break;
            case 1:
                value.append("+ " + AGI);
                value1.append("- " + total);
                value2.append(" 增加後 -> " + reStr / 7 + "~" + reStr);
                敏捷預示.setText(value.toString());
                能力點預示.setText(value1.toString());
                攻擊力預示.setText(value2.toString());
                break;
            case 2:
                value.append("+ " + INT);
                value1.append("- " + total);
                value2.append(" 增加後 -> " + reStr / 7 + "~" + reStr);
                智力預示.setText(value.toString());
                能力點預示.setText(value1.toString());
                攻擊力預示.setText(value2.toString());
                break;
            case 3:
                value.append("+ " + LUK);
                value1.append("- " + total);
                value2.append(" 增加後 -> " + reStr / 7 + "~" + reStr);
                幸運預示.setText(value.toString());
                能力點預示.setText(value1.toString());
                攻擊力預示.setText(value2.toString());
                break;
            default:
                break;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Level;
    private javax.swing.JLabel Name;
    public static javax.swing.JTextPane chatLog;
    private javax.swing.JLabel exp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane outText;
    private javax.swing.JTabbedPane 主畫面;
    private javax.swing.JPanel 人物資訊;
    private javax.swing.JLabel 剩餘能力點;
    private javax.swing.JLabel 力量;
    private javax.swing.JButton 力量增加;
    private javax.swing.JLabel 力量預示;
    private javax.swing.JButton 取消;
    private javax.swing.JButton 同行奇遇;
    public static javax.swing.JTextArea 夥伴好感度;
    private javax.swing.JPanel 夥伴資訊;
    private javax.swing.JLabel 幸運;
    private javax.swing.JButton 幸運增加;
    private javax.swing.JLabel 幸運預示;
    private javax.swing.JButton 復活;
    private static javax.swing.JTextArea 怪物;
    private javax.swing.JPanel 打怪修煉;
    private javax.swing.JLabel 攻擊力;
    private javax.swing.JLabel 攻擊力預示;
    private javax.swing.JLabel 敏捷;
    private javax.swing.JButton 敏捷增加;
    private javax.swing.JLabel 敏捷預示;
    private javax.swing.JLabel 智力;
    private javax.swing.JButton 智力增加;
    private javax.swing.JLabel 智力預示;
    private javax.swing.JButton 更新;
    private javax.swing.JButton 清除文字;
    private javax.swing.JButton 確定;
    private javax.swing.JLabel 稱號;
    private javax.swing.JLabel 能力點預示;
    private javax.swing.JLabel 血量;
    private javax.swing.JPanel 詳細資訊;
    private javax.swing.JCheckBox 跳過戰鬥;
    private javax.swing.JButton 選擇夥伴;
    private javax.swing.JButton 選擇怪物;
    private javax.swing.JLabel 金錢;
    private javax.swing.JButton 開始;
    private javax.swing.JLabel 防禦;
    private javax.swing.JLabel 顯示夥伴;
    // End of variables declaration//GEN-END:variables
}
